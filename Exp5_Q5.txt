// Abstract superclass: Person
abstract class Person {
    String name;
    
    public Person(String name) {
        this.name = name;
    }
    
    // Abstract method to be implemented by subclasses
    abstract void performDuty();
}

// Subclass: Student
class Student extends Person {
    public Student(String name) {
        super(name);
    }
    
    @Override
    void performDuty() {
        System.out.println(name + " is studying.");
    }
}

// Subclass: Teacher
class Teacher extends Person {
    public Teacher(String name) {
        super(name);
    }
    
    @Override
    void performDuty() {
        System.out.println(name + " is teaching.");
    }
}

// Main class to demonstrate runtime polymorphism
import java.util.ArrayList;
import java.util.List;

public class SchoolManagement {
    public static void main(String[] args) {
        // Create a list of Person references
        List<Person> people = new ArrayList<>();
        
        // Add instances of Student and Teacher
        people.add(new Student("Alice"));
        people.add(new Teacher("Mr. Smith"));
        people.add(new Student("Bob"));
        people.add(new Teacher("Mrs. Johnson"));
        
        // Iterate through the list and call performDuty()
        for (Person person : people) {
            person.performDuty(); // Runtime polymorphism
        }
    }
}
